{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from './services/weatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"blue\";\n    const threshold = units === 'metric' ? 20 : 60;\n    if (weather.temp <= threshold) return \"orange\";\n    return \"blue\";\n  };\n\n  const fetchWeather = async () => {\n    const data = await getFormattedWeatherData({\n      q: 'london'\n    });\n    console.log(data);\n  };\n\n  fetchWeather();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"HOURLY FORECAST\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"DAILY FORECAST\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n\n_c = App;\nexport default App; // import { useEffect, useState } from 'react'\n// import TopButtons from './components/TopButtons'\n// import Inputs from './components/Inputs'\n// import TimeAndLocation from './components/TimeAndLocation';\n// import TemperatureAndDetails from './components/TemperatureAndDetails'\n// import Forecast from './components/Forecast'\n// import getFormattedWeatherData from './services/weatherService';\n// const App = () => {\n//   const [query, setQuery] = useState({ q: \"berlin\" });\n//   const [units, setUnits] = useState(\"metric\");\n//   const [weather, setWeather] = useState(null);\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       await getFormattedWeatherData({ ...query, units }).then((data) => {\n//         setWeather(data)\n//       })\n//     }\n//     fetchWeather()\n//   }, [query, units])\n//   const formatBackground = () => {\n//     if (!weather) return \"blue\"\n//     const threshold = units === 'metric' ? 20 : 60\n//     if (weather.temp <= threshold) return \"orange\"\n//     return \"blue\"\n//   }\n//   const fetchWeather = async () => {\n//     const data = await getFormattedWeatherData({q: 'london'});\n//     console.log(data);\n//   }\n//   fetchWeather();\n//   return (\n//     <div \n//     className={`${formatBackground()}`}\n//     >\n//       <TopButtons setQuery={setQuery} />\n//       <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n//       {weather && (\n//         <div>\n//           <TimeAndLocation weather={weather} />\n//           <TemperatureAndDetails weather={weather} />\n//           <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n//           <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data","formatBackground","threshold","temp","console","log","hourly","daily"],"sources":["/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport TopButtons from './components/TopButtons'\nimport Inputs from './components/Inputs'\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails'\nimport Forecast from './components/Forecast'\nimport getFormattedWeatherData from './services/weatherService';\n\n\nconst App = () => {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        setWeather(data)\n      })\n    }\n\n    fetchWeather()\n  }, [query, units])\n\n  const formatBackground = () => {\n    if (!weather) return \"blue\"\n    const threshold = units === 'metric' ? 20 : 60\n    if (weather.temp <= threshold) return \"orange\"\n    return \"blue\"\n  }\n\n  const fetchWeather = async () => {\n    const data = await getFormattedWeatherData({q: 'london'});\n    console.log(data);\n  }\n\n  fetchWeather();\n\n  return (\n    <div \n    className={`${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n    \n          <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n          <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import { useEffect, useState } from 'react'\n// import TopButtons from './components/TopButtons'\n// import Inputs from './components/Inputs'\n// import TimeAndLocation from './components/TimeAndLocation';\n// import TemperatureAndDetails from './components/TemperatureAndDetails'\n// import Forecast from './components/Forecast'\n// import getFormattedWeatherData from './services/weatherService';\n\n\n// const App = () => {\n//   const [query, setQuery] = useState({ q: \"berlin\" });\n//   const [units, setUnits] = useState(\"metric\");\n//   const [weather, setWeather] = useState(null);\n\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       await getFormattedWeatherData({ ...query, units }).then((data) => {\n//         setWeather(data)\n//       })\n//     }\n\n//     fetchWeather()\n//   }, [query, units])\n\n//   const formatBackground = () => {\n//     if (!weather) return \"blue\"\n//     const threshold = units === 'metric' ? 20 : 60\n//     if (weather.temp <= threshold) return \"orange\"\n//     return \"blue\"\n//   }\n\n//   const fetchWeather = async () => {\n//     const data = await getFormattedWeatherData({q: 'london'});\n//     console.log(data);\n//   }\n\n//   fetchWeather();\n\n//   return (\n//     <div \n//     className={`${formatBackground()}`}\n//     >\n//       <TopButtons setQuery={setQuery} />\n//       <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n//       {weather && (\n//         <div>\n//           <TimeAndLocation weather={weather} />\n//           <TemperatureAndDetails weather={weather} />\n    \n//           <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n//           <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;IAAEU,CAAC,EAAE;EAAL,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,YAAY;MAC/B,MAAMT,uBAAuB,CAAC,EAAE,GAAGE,KAAL;QAAYG;MAAZ,CAAD,CAAvB,CAA6CK,IAA7C,CAAmDC,IAAD,IAAU;QAChEH,UAAU,CAACG,IAAD,CAAV;MACD,CAFK,CAAN;IAGD,CAJD;;IAMAF,YAAY;EACb,CARQ,EAQN,CAACP,KAAD,EAAQG,KAAR,CARM,CAAT;;EAUA,MAAMO,gBAAgB,GAAG,MAAM;IAC7B,IAAI,CAACL,OAAL,EAAc,OAAO,MAAP;IACd,MAAMM,SAAS,GAAGR,KAAK,KAAK,QAAV,GAAqB,EAArB,GAA0B,EAA5C;IACA,IAAIE,OAAO,CAACO,IAAR,IAAgBD,SAApB,EAA+B,OAAO,QAAP;IAC/B,OAAO,MAAP;EACD,CALD;;EAOA,MAAMJ,YAAY,GAAG,YAAY;IAC/B,MAAME,IAAI,GAAG,MAAMX,uBAAuB,CAAC;MAACI,CAAC,EAAE;IAAJ,CAAD,CAA1C;IACAW,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACD,CAHD;;EAKAF,YAAY;EAEZ,oBACE;IACA,SAAS,EAAG,GAAEG,gBAAgB,EAAG,EADjC;IAAA,wBAGE,QAAC,UAAD;MAAY,QAAQ,EAAET;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,QAAQ,EAAEA,QAAlB;MAA4B,KAAK,EAAEE,KAAnC;MAA0C,QAAQ,EAAEC;IAApD;MAAA;MAAA;MAAA;IAAA,QAJF,EAMGC,OAAO,iBACN;MAAA,wBACE,QAAC,eAAD;QAAiB,OAAO,EAAEA;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,qBAAD;QAAuB,OAAO,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,QAAD;QAAU,KAAK,EAAC,iBAAhB;QAAkC,KAAK,EAAEA,OAAO,CAACU;MAAjD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAU,KAAK,EAAC,gBAAhB;QAAiC,KAAK,EAAEV,OAAO,CAACW;MAAhD;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/CD;;GAAMjB,G;;KAAAA,G;AAiDN,eAAeA,GAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}