{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{DateTime}from\"luxon\";var API_KEY=process.env.REACT_APP_WEATHER_API_KEY;var BASE_URL=\"https://api.openweathermap.org/data/2.5\";var getWeatherData=function getWeatherData(infoType,searchParams){var url=new URL(BASE_URL+\"/\"+infoType);url.search=new URLSearchParams(_objectSpread(_objectSpread({},searchParams),{},{appid:API_KEY}));return fetch(url).then(function(res){return res.json();});};var formatCurrentWeather=function formatCurrentWeather(data){var _data$coord=data.coord,lat=_data$coord.lat,lon=_data$coord.lon,_data$main=data.main,temp=_data$main.temp,feels_like=_data$main.feels_like,temp_min=_data$main.temp_min,temp_max=_data$main.temp_max,humidity=_data$main.humidity,name=data.name,dt=data.dt,_data$sys=data.sys,country=_data$sys.country,sunrise=_data$sys.sunrise,sunset=_data$sys.sunset,weather=data.weather,speed=data.wind.speed;var _weather$=weather[0],details=_weather$.main,icon=_weather$.icon;return{lat:lat,lon:lon,temp:temp,feels_like:feels_like,temp_min:temp_min,temp_max:temp_max,humidity:humidity,name:name,dt:dt,country:country,sunrise:sunrise,sunset:sunset,details:details,icon:icon,speed:speed};};var formatForecastWeather=function formatForecastWeather(data){var timezone=data.timezone,daily=data.daily,hourly=data.hourly;daily=daily.slice(1,8).map(function(d){return{title:formatToLocalTime(d.dt,timezone,\"ccc\"),temp:d.temp.day,icon:d.weather[0].icon};});hourly=hourly.slice(1,25).map(function(d){return{title:formatToLocalTime(d.dt,timezone,\"hh:mm a\"),temp:d.temp,icon:d.weather[0].icon};});return{timezone:timezone,daily:daily,hourly:hourly};};var getFormattedWeatherData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(searchParams){var formattedCurrentWeather,lat,lon,formattedForecastWeather;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getWeatherData('weather',searchParams).then(formatCurrentWeather);case 2:formattedCurrentWeather=_context.sent;lat=formattedCurrentWeather.lat,lon=formattedCurrentWeather.lon;_context.next=6;return getWeatherData(\"onecall\",{lat:lat,lon:lon,exclude:\"current,minutely,alerts\",units:searchParams.units}).then(formatForecastWeather);case 6:formattedForecastWeather=_context.sent;return _context.abrupt(\"return\",_objectSpread(_objectSpread({},formattedCurrentWeather),formattedForecastWeather));case 8:case\"end\":return _context.stop();}}},_callee);}));return function getFormattedWeatherData(_x){return _ref.apply(this,arguments);};}();var formatToLocalTime=function formatToLocalTime(secs,zone){var format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"cccc, dd LLL yyyy' | Local time: 'hh:mm a\";return DateTime.fromSeconds(secs).setZone(zone).toFormat(format);};var iconUrlFromCode=function iconUrlFromCode(code){return\"http://openweathermap.org/img/wn/\".concat(code,\"@2x.png\");};export default getFormattedWeatherData;export{formatToLocalTime,iconUrlFromCode};// import { DateTime } from \"luxon\";\n// const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n// const BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n// const getWeatherData = (infoType, searchParams) => {\n//   const url = new URL(BASE_URL + \"/\" + infoType);\n//   url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n//   return fetch(url).then((res) => res.json());\n// };\n// const formatCurrentWeather = (data) => {\n//   const {\n//     coord: { lat, lon },\n//     main: { temp, feels_like, temp_min, temp_max, humidity },\n//     name,\n//     dt,\n//     sys: { country, sunrise, sunset },\n//     weather,\n//     wind: { speed },\n//   } = data;\n//   const { main: details, icon } = weather[0];\n//   return {\n//     lat,\n//     lon,\n//     temp,\n//     feels_like,\n//     temp_min,\n//     temp_max,\n//     humidity,\n//     name,\n//     dt,\n//     country,\n//     sunrise,\n//     sunset,\n//     details,\n//     icon,\n//     speed,\n//   };\n// }\n// const formatForecastWeather = (data) => {\n//   let { timezone, daily, hourly } = data;\n//   daily = daily.slice(1, 8).map((d) => {\n//     return {\n//       title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n//       temp: d.temp.day,\n//       icon: d.weather[0].icon,\n//     };\n//   });\n//   hourly = hourly.slice(1, 25).map((d) => {\n//     return {\n//       title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n//       temp: d.temp,\n//       icon: d.weather[0].icon,\n//     };\n//   });\n//   return { timezone, daily, hourly };\n// };\n// const getFormattedWeatherData = async (searchParams) => {\n//   const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(formatCurrentWeather)\n//   const { lat, lon } = formattedCurrentWeather;\n//   const formattedForecastWeather = await getWeatherData(\"onecall\", {\n//     lat,\n//     lon,\n//     exclude: \"current,minutely,alerts\",\n//     units: searchParams.units,\n//   }).then(formatForecastWeather);\n//   return { ...formattedCurrentWeather, ...formattedForecastWeather };\n// };\n// const formatToLocalTime = (\n//   secs,\n//   zone,\n//   format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n// ) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n// const iconUrlFromCode = (code) =>\n//   `http://openweathermap.org/img/wn/${code}@2x.png`;\n// export default getFormattedWeatherData\n// export { formatToLocalTime, iconUrlFromCode };","map":{"version":3,"names":["DateTime","API_KEY","process","env","REACT_APP_WEATHER_API_KEY","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","formatCurrentWeather","data","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","humidity","name","dt","sys","country","sunrise","sunset","weather","speed","wind","details","icon","formatForecastWeather","timezone","daily","hourly","slice","map","d","title","formatToLocalTime","day","getFormattedWeatherData","formattedCurrentWeather","exclude","units","formattedForecastWeather","secs","zone","format","fromSeconds","setZone","toFormat","iconUrlFromCode","code"],"sources":["/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/services/weatherService.js"],"sourcesContent":["import { DateTime } from \"luxon\";\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url).then((res) => res.json());\n};\n\nconst formatCurrentWeather = (data) => {\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    dt,\n    sys: { country, sunrise, sunset },\n    weather,\n    wind: { speed },\n  } = data;\n\n  const { main: details, icon } = weather[0];\n\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n  };\n}\n\nconst formatForecastWeather = (data) => {\n  let { timezone, daily, hourly } = data;\n  daily = daily.slice(1, 8).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n      temp: d.temp.day,\n      icon: d.weather[0].icon,\n    };\n  });\n\n  hourly = hourly.slice(1, 25).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n      temp: d.temp,\n      icon: d.weather[0].icon,\n    };\n  });\n\n  return { timezone, daily, hourly };\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n  const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(formatCurrentWeather)\n\n  const { lat, lon } = formattedCurrentWeather;\n\n  const formattedForecastWeather = await getWeatherData(\"onecall\", {\n    lat,\n    lon,\n    exclude: \"current,minutely,alerts\",\n    units: searchParams.units,\n  }).then(formatForecastWeather);\n\n  return { ...formattedCurrentWeather, ...formattedForecastWeather };\n};\n\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst iconUrlFromCode = (code) =>\n  `http://openweathermap.org/img/wn/${code}@2x.png`;\n\nexport default getFormattedWeatherData\n\nexport { formatToLocalTime, iconUrlFromCode };\n\n\n\n// import { DateTime } from \"luxon\";\n\n// const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n// const BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\n// const getWeatherData = (infoType, searchParams) => {\n//   const url = new URL(BASE_URL + \"/\" + infoType);\n//   url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n//   return fetch(url).then((res) => res.json());\n// };\n\n// const formatCurrentWeather = (data) => {\n//   const {\n//     coord: { lat, lon },\n//     main: { temp, feels_like, temp_min, temp_max, humidity },\n//     name,\n//     dt,\n//     sys: { country, sunrise, sunset },\n//     weather,\n//     wind: { speed },\n//   } = data;\n\n//   const { main: details, icon } = weather[0];\n\n//   return {\n//     lat,\n//     lon,\n//     temp,\n//     feels_like,\n//     temp_min,\n//     temp_max,\n//     humidity,\n//     name,\n//     dt,\n//     country,\n//     sunrise,\n//     sunset,\n//     details,\n//     icon,\n//     speed,\n//   };\n// }\n\n// const formatForecastWeather = (data) => {\n//   let { timezone, daily, hourly } = data;\n//   daily = daily.slice(1, 8).map((d) => {\n//     return {\n//       title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n//       temp: d.temp.day,\n//       icon: d.weather[0].icon,\n//     };\n//   });\n\n//   hourly = hourly.slice(1, 25).map((d) => {\n//     return {\n//       title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n//       temp: d.temp,\n//       icon: d.weather[0].icon,\n//     };\n//   });\n\n//   return { timezone, daily, hourly };\n// };\n\n// const getFormattedWeatherData = async (searchParams) => {\n//   const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(formatCurrentWeather)\n\n//   const { lat, lon } = formattedCurrentWeather;\n\n//   const formattedForecastWeather = await getWeatherData(\"onecall\", {\n//     lat,\n//     lon,\n//     exclude: \"current,minutely,alerts\",\n//     units: searchParams.units,\n//   }).then(formatForecastWeather);\n\n//   return { ...formattedCurrentWeather, ...formattedForecastWeather };\n// };\n\n\n// const formatToLocalTime = (\n//   secs,\n//   zone,\n//   format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n// ) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\n// const iconUrlFromCode = (code) =>\n//   `http://openweathermap.org/img/wn/${code}@2x.png`;\n\n// export default getFormattedWeatherData\n\n// export { formatToLocalTime, iconUrlFromCode };"],"mappings":"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"},"metadata":{},"sourceType":"module"}