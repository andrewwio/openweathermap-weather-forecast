{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import TopButtons from'./components/TopButtons';import Inputs from'./components/Inputs';import TimeAndLocation from'./components/TimeAndLocation';import TemperatureAndDetails from'./components/TemperatureAndDetails';import Forecast from'./components/Forecast';import getFormattedWeatherData from'./services/weatherService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState({q:\"berlin\"}),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(\"metric\"),_useState4=_slicedToArray(_useState3,2),units=_useState4[0],setUnits=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),weather=_useState6[0],setWeather=_useState6[1];useEffect(function(){var fetchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getFormattedWeatherData(_objectSpread(_objectSpread({},query),{},{units:units})).then(function(data){setWeather(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchWeather(){return _ref.apply(this,arguments);};}();fetchWeather();},[query,units]);var formatBackground=function formatBackground(){if(!weather)return\"blue\";var threshold=units==='metric'?20:60;if(weather.temp<=threshold)return\"orange\";return\"blue\";};var fetchWeather=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getFormattedWeatherData({q:'london'});case 2:data=_context2.sent;console.log(data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchWeather(){return _ref2.apply(this,arguments);};}();fetchWeather();return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(formatBackground()),children:[/*#__PURE__*/_jsx(TopButtons,{setQuery:setQuery}),/*#__PURE__*/_jsx(Inputs,{setQuery:setQuery,units:units,setUnits:setUnits}),weather&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TimeAndLocation,{weather:weather}),/*#__PURE__*/_jsx(TemperatureAndDetails,{weather:weather}),/*#__PURE__*/_jsx(Forecast,{title:\"HOURLY FORECAST\",items:weather.hourly}),/*#__PURE__*/_jsx(Forecast,{title:\"DAILY FORECAST\",items:weather.daily})]})]});};export default App;// import { useEffect, useState } from 'react'\n// import TopButtons from './components/TopButtons'\n// import Inputs from './components/Inputs'\n// import TimeAndLocation from './components/TimeAndLocation';\n// import TemperatureAndDetails from './components/TemperatureAndDetails'\n// import Forecast from './components/Forecast'\n// import getFormattedWeatherData from './services/weatherService';\n// const App = () => {\n//   const [query, setQuery] = useState({ q: \"berlin\" });\n//   const [units, setUnits] = useState(\"metric\");\n//   const [weather, setWeather] = useState(null);\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       await getFormattedWeatherData({ ...query, units }).then((data) => {\n//         setWeather(data)\n//       })\n//     }\n//     fetchWeather()\n//   }, [query, units])\n//   const formatBackground = () => {\n//     if (!weather) return \"blue\"\n//     const threshold = units === 'metric' ? 20 : 60\n//     if (weather.temp <= threshold) return \"orange\"\n//     return \"blue\"\n//   }\n//   const fetchWeather = async () => {\n//     const data = await getFormattedWeatherData({q: 'london'});\n//     console.log(data);\n//   }\n//   fetchWeather();\n//   return (\n//     <div \n//     className={`${formatBackground()}`}\n//     >\n//       <TopButtons setQuery={setQuery} />\n//       <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n//       {weather && (\n//         <div>\n//           <TimeAndLocation weather={weather} />\n//           <TemperatureAndDetails weather={weather} />\n//           <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n//           <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":["useEffect","useState","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","App","q","query","setQuery","units","setUnits","weather","setWeather","fetchWeather","then","data","formatBackground","threshold","temp","console","log","hourly","daily"],"sources":["/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport TopButtons from './components/TopButtons'\nimport Inputs from './components/Inputs'\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails'\nimport Forecast from './components/Forecast'\nimport getFormattedWeatherData from './services/weatherService';\n\n\nconst App = () => {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        setWeather(data)\n      })\n    }\n\n    fetchWeather()\n  }, [query, units])\n\n  const formatBackground = () => {\n    if (!weather) return \"blue\"\n    const threshold = units === 'metric' ? 20 : 60\n    if (weather.temp <= threshold) return \"orange\"\n    return \"blue\"\n  }\n\n  const fetchWeather = async () => {\n    const data = await getFormattedWeatherData({q: 'london'});\n    console.log(data);\n  }\n\n  fetchWeather();\n\n  return (\n    <div \n    className={`${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n    \n          <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n          <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import { useEffect, useState } from 'react'\n// import TopButtons from './components/TopButtons'\n// import Inputs from './components/Inputs'\n// import TimeAndLocation from './components/TimeAndLocation';\n// import TemperatureAndDetails from './components/TemperatureAndDetails'\n// import Forecast from './components/Forecast'\n// import getFormattedWeatherData from './services/weatherService';\n\n\n// const App = () => {\n//   const [query, setQuery] = useState({ q: \"berlin\" });\n//   const [units, setUnits] = useState(\"metric\");\n//   const [weather, setWeather] = useState(null);\n\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       await getFormattedWeatherData({ ...query, units }).then((data) => {\n//         setWeather(data)\n//       })\n//     }\n\n//     fetchWeather()\n//   }, [query, units])\n\n//   const formatBackground = () => {\n//     if (!weather) return \"blue\"\n//     const threshold = units === 'metric' ? 20 : 60\n//     if (weather.temp <= threshold) return \"orange\"\n//     return \"blue\"\n//   }\n\n//   const fetchWeather = async () => {\n//     const data = await getFormattedWeatherData({q: 'london'});\n//     console.log(data);\n//   }\n\n//   fetchWeather();\n\n//   return (\n//     <div \n//     className={`${formatBackground()}`}\n//     >\n//       <TopButtons setQuery={setQuery} />\n//       <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n//       {weather && (\n//         <div>\n//           <TimeAndLocation weather={weather} />\n//           <TemperatureAndDetails weather={weather} />\n    \n//           <Forecast title=\"HOURLY FORECAST\" items={weather.hourly} />\n//           <Forecast title=\"DAILY FORECAST\" items={weather.daily} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"2lBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,WAAP,KAAuB,yBAAvB,CACA,MAAOC,OAAP,KAAmB,qBAAnB,CACA,MAAOC,gBAAP,KAA4B,8BAA5B,CACA,MAAOC,sBAAP,KAAkC,oCAAlC,CACA,MAAOC,SAAP,KAAqB,uBAArB,CACA,MAAOC,wBAAP,KAAoC,2BAApC,C,wFAGA,GAAMC,IAAG,CAAG,QAANA,IAAM,EAAM,CAChB,cAA0BP,QAAQ,CAAC,CAAEQ,CAAC,CAAE,QAAL,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eACA,eAA0BV,QAAQ,CAAC,QAAD,CAAlC,yCAAOW,KAAP,eAAcC,QAAd,eACA,eAA8BZ,QAAQ,CAAC,IAAD,CAAtC,yCAAOa,OAAP,eAAgBC,UAAhB,eAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,aAAY,4FAAG,2JACbT,wBAAuB,gCAAMG,KAAN,MAAaE,KAAK,CAALA,KAAb,GAAvB,CAA6CK,IAA7C,CAAkD,SAACC,IAAD,CAAU,CAChEH,UAAU,CAACG,IAAD,CAAV,CACD,CAFK,CADa,uDAAH,kBAAZF,aAAY,0CAAlB,CAMAA,YAAY,GACb,CARQ,CAQN,CAACN,KAAD,CAAQE,KAAR,CARM,CAAT,CAUA,GAAMO,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC7B,GAAI,CAACL,OAAL,CAAc,MAAO,MAAP,CACd,GAAMM,UAAS,CAAGR,KAAK,GAAK,QAAV,CAAqB,EAArB,CAA0B,EAA5C,CACA,GAAIE,OAAO,CAACO,IAAR,EAAgBD,SAApB,CAA+B,MAAO,QAAP,CAC/B,MAAO,MAAP,CACD,CALD,CAOA,GAAMJ,aAAY,6FAAG,0KACAT,wBAAuB,CAAC,CAACE,CAAC,CAAE,QAAJ,CAAD,CADvB,QACbS,IADa,gBAEnBI,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAFmB,wDAAH,kBAAZF,aAAY,2CAAlB,CAKAA,YAAY,GAEZ,mBACE,aACA,SAAS,WAAKG,gBAAgB,EAArB,CADT,wBAGE,KAAC,UAAD,EAAY,QAAQ,CAAER,QAAtB,EAHF,cAIE,KAAC,MAAD,EAAQ,QAAQ,CAAEA,QAAlB,CAA4B,KAAK,CAAEC,KAAnC,CAA0C,QAAQ,CAAEC,QAApD,EAJF,CAMGC,OAAO,eACN,oCACE,KAAC,eAAD,EAAiB,OAAO,CAAEA,OAA1B,EADF,cAEE,KAAC,qBAAD,EAAuB,OAAO,CAAEA,OAAhC,EAFF,cAIE,KAAC,QAAD,EAAU,KAAK,CAAC,iBAAhB,CAAkC,KAAK,CAAEA,OAAO,CAACU,MAAjD,EAJF,cAKE,KAAC,QAAD,EAAU,KAAK,CAAC,gBAAhB,CAAiC,KAAK,CAAEV,OAAO,CAACW,KAAhD,EALF,GAPJ,GADF,CAkBD,CA/CD,CAiDA,cAAejB,IAAf,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}