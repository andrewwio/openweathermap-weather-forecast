{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/components/TimeAndLocation.jsx\";\nimport { formatToLocalTime } from '../services/weatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeAndLocation = _ref => {\n  let {\n    weather: {\n      dt,\n      timezone,\n      name,\n      country\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatToLocalTime(dt, timezone)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${name}, ${country}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TimeAndLocation;\nexport default TimeAndLocation; // import { formatToLocalTime } from '../services/weatherService'\n// const TimeAndLocation = ({weather: {dt, timezone, name, country}}) => {\n//   return (\n//     <div>\n//       <div>\n//         <p>\n//           {formatToLocalTime(dt, timezone)}\n//         </p>\n//       </div>\n//       <div>\n//         <p>\n//           {`${name}, ${country}`}\n//         </p>\n//       </div>\n//     </div>\n//   )\n// }\n// export default TimeAndLocation\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeAndLocation\");","map":{"version":3,"names":["formatToLocalTime","TimeAndLocation","weather","dt","timezone","name","country"],"sources":["/Users/mymac/Documents/GitHub/openweathermap-weather-forecast/src/components/TimeAndLocation.jsx"],"sourcesContent":["import { formatToLocalTime } from '../services/weatherService'\n\nconst TimeAndLocation = ({weather: {dt, timezone, name, country}}) => {\n  return (\n    <div>\n      <div>\n        <p>\n          {formatToLocalTime(dt, timezone)}\n        </p>\n      </div>\n      <div>\n        <p>\n          {`${name}, ${country}`}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default TimeAndLocation\n\n\n\n\n// import { formatToLocalTime } from '../services/weatherService'\n\n// const TimeAndLocation = ({weather: {dt, timezone, name, country}}) => {\n//   return (\n//     <div>\n//       <div>\n//         <p>\n//           {formatToLocalTime(dt, timezone)}\n//         </p>\n//       </div>\n//       <div>\n//         <p>\n//           {`${name}, ${country}`}\n//         </p>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default TimeAndLocation"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,4BAAlC;;;AAEA,MAAMC,eAAe,GAAG,QAA8C;EAAA,IAA7C;IAACC,OAAO,EAAE;MAACC,EAAD;MAAKC,QAAL;MAAeC,IAAf;MAAqBC;IAArB;EAAV,CAA6C;EACpE,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UACGN,iBAAiB,CAACG,EAAD,EAAKC,QAAL;MADpB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,uBACE;QAAA,UACI,GAAEC,IAAK,KAAIC,OAAQ;MADvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAfD;;KAAML,e;AAiBN,eAAeA,eAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}